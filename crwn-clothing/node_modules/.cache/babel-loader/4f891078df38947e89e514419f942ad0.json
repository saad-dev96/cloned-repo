{"ast":null,"code":"import { createSelector } from 'reselect';\nimport cartReducer from './cart.reducer';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem * cartItem.price, 0));","map":{"version":3,"sources":["/home/tintash/Desktop/React/E-shop/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","cartReducer","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGL,cAAc,CACzC,CAACE,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGP,cAAc,CAC1C,CAACE,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAIT,cAAc,CAC/C,CAACK,eAAD,CAD+C,EAE/CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAC1BD,mBAAmB,GAAGC,QADb,EACuB,CADvB,CAFkC,CAA5C;AAMP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACK,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAC1BD,mBAAmB,GAAGC,QAAQ,GAAGA,QAAQ,CAACE,KADjC,EACwC,CADxC,CAF4B,CAAtC","sourcesContent":["import {createSelector} from 'reselect'\nimport cartReducer from './cart.reducer';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n)\n\nexport const selectCartItemsCount =  createSelector (\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => \n        accumalatedQuantity + cartItem, 0)\n)\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => \n        accumalatedQuantity + cartItem * cartItem.price, 0)\n)\n"]},"metadata":{},"sourceType":"module"}